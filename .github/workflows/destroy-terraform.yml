name: "Destroy Terraform Infrastructure"

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        required: true 
        options:
          - production
        type: choice 
 
env:
  TF_WORKSPACE: ${{ github.event.inputs.environment }}
  TF_VAR_aws-region: ${{ secrets.AWS_REGION }}
  TF_VAR_aws-secret-key: ${{ secrets.AWS_SECRET }}
  TF_VAR_aws-access-key: ${{ secrets.AWS_ACCESS }}
  TF_VAR_key-name: ${{ secrets.PROD_KEY_NAME }}
  TF_VAR_acm-cert: ${{ secrets.PROD_ACM_CERT }}
  TF_VAR_db_host: ${{ secrets.PGSQL_HOST }} 
  TF_VAR_db_user: ${{ secrets.PGSQL_USER }} 
  TF_VAR_db_password: ${{ secrets.PGSQL_PASSWORD }} 

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
  
    defaults:
      run:
        shell: bash 
    
    steps:
    # checkout the repo to Github Actions runner
    - name: Checkout 
      uses: actions/checkout@v2 

    # install terraform CLI
    - name: Setup Terraform 
      uses: hashicorp/setup-terraform@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      id: init
      run: |
        cd Terraform
        cd Infrastructure 
        terraform init  -backend-config="bucket=magnolia-portfolio-bucket" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="access_key=${{  secrets.AWS_ACCESS }}" -backend-config="secret_key=${{ secrets.AWS_SECRET }}"

    - name: Terraform Destroy 
      run: |
        cd Terraform
        cd Infrastructure 
        terraform destroy --auto-approve